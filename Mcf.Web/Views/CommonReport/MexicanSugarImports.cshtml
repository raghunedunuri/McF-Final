
@{
    ViewBag.Title = null;
    Layout = null;
}

<meta charset="utf-8" />
<script src="http://code.highcharts.com/highcharts.js"></script>
<script src="https://code.highcharts.com/modules/exporting.js"></script>
<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script src="~/Scripts/index.js"></script>
<script src="~/Scripts/offline-exporting.js"></script>
<script src="~/Scripts/jquery-ui.js"></script>
<script src="~/Scripts/jquery.combobox.js"></script>
<script src="~/Scripts/common-chart.js"></script>

<link href="~/Content/jquery-ui.css" rel="stylesheet" />
<link href="~/Content/font-awesome.css" rel="stylesheet" />
<link href="~/Content/chart.css" rel="stylesheet" />

<div id="demo-wrapper">
    <div class="chart-title clearfix">
        <div class="arrowToggle">
            <span class="link" id="chart_toggle">
                <i class="fa fa-caret-down"></i>
            </span>            
            <div id="chart-dropDown" class="collapse chart-dropDown" style="display:none;">
                <form>
                    <ul>
                        <li class="clearfix">
                            <span class="grid-lines">
                                <label for="SelectVGrid">
                                    <input type="checkbox" name="toggleGrid" id="SelectVGrid" value="SelectVGrid" onclick="SelectGridline(this.value, this.checked)">
                                    <span class="image" title="Vertical Grid line">
                                        <img src="~/img/chart-icon/grid-line.png" class="img-responsive" alt="Grid line" />
                                    </span>
                                </label>
                                <label for="SelectHGrid">
                                    <input type="checkbox" name="toggleGrid" id="SelectHGrid" value="SelectHGrid" onclick="SelectGridline(this.value, this.checked)">
                                    <span class="image" title="Horizontal Grid line">
                                        <img src="~/img/chart-icon/grid-line-h.png" class="img-responsive" alt="Grid line" />
                                    </span>
                                </label>
                            </span>
                            <label class="switch no-switch" for="CheckGrid" id="IsToggleGrid">
                                <input type="checkbox" id="CheckGrid" onclick="SetGrid()">
                                <span class="switch-slider round"></span>
                            </label>
                        </li>
                        <li class="clearfix">
                            <span class="image" title="Legends"><img src="~/img/chart-icon/legend.png" class="img-responsive" alt="Legends" /></span>
                            <label class="switch" for="legends">
                                <input type="checkbox" id="legends" onclick="SetValues()">
                                <span class="switch-slider round"></span>
                            </label>
                        </li>
                        <li class="clearfix">
                            <span class="image" title="Data label"><img src="~/img/chart-icon/data-label.png" class="img-responsive" alt="Data label" /></span>
                            <label class="switch" for="datalbl">
                                <input type="checkbox" id="datalbl" onclick="SetValues()">
                                <span class="switch-slider round"></span>
                            </label>
                        </li>
                        <li class="clearfix">
                            <span class="image" title="Drawing"><img src="~/img/chart-icon/drawing.png" class="img-responsive" alt="Drawing" /></span>
                            <label class="switch no-switch" for="drawing">
                                <input type="checkbox" id="drawing">
                                <span class="switch-slider round"></span>
                            </label>
                        </li>
                        <li class="clearfix">
                            <span class="image" title="Cross hair"><img src="~/img/chart-icon/cross-hair.png" class="img-responsive" alt="Cross hair" /></span>
                            <label class="switch no-switch" for="crosshair">
                                <input type="checkbox" id="crosshair">
                                <span class="switch-slider round"></span>
                            </label>
                        </li>
                        <li class="clearfix">
                            <span class="image" title="Utilities"><img src="~/img/chart-icon/utilities.png" class="img-responsive" alt="Utilities" /></span>
                            <label class="switch no-switch" for="utilities">
                                <input type="checkbox" id="utilities">
                                <span class="switch-slider round"></span>
                            </label>
                        </li>
                    </ul>
                </form>                
            </div>
        </div>
    </div>
    <div id="mapBox" style="height:410px;width:100%; border:2px;">
        <div id="containerData" style="height:480px;width:100%"></div>
    </div>
</div>
<script>
    var year = @Html.Raw(Json.Encode(ViewBag.year));
    var refined = @Html.Raw(Json.Encode(ViewBag.Refined));
    var estandar = @Html.Raw(Json.Encode(ViewBag.Estandar));
    var total = @Html.Raw(Json.Encode(ViewBag.Total));
    //var data = { "years": ["2005/06", "2006/07", "2007/08", "2008/09", "2009/10", "2010/11", "2011/12", "2012/13", "2013/14", "2014/15", "2015/16", "2016/17", "2017/18"], "esandor": [0.4, 0.1, 0.2, 0.4, 0.2, 0.5, 0.2, 1.3, 1.2, 0.7, 0.6, 0.55, 0.8], "refinado": [0.4, 0.1, 0.2, 0.7, 0.5, 0.9, 0.6, 0.6, 0.6, 0.6, 0.6, 0.5, 0.3], "total": [3.1, 1.9, 2.4, 2.8, 3.0, 3.4, 3.3, 2.9, 3.4, 3.3, 3.0, 2.9, 3.1] };
    //var categories = data['years'];
    //var data = [true,false]
    //var data = true;
    //var checkBox = document.getElementById("Grid");
    var selectedVertical = false;
    var selectedHorzintal = false;
    var checkBoxGrid = document.getElementById("CheckGrid");
    var IsToggleGrid = document.getElementById("IsToggleGrid");
    var SelectVGrid = document.getElementById("SelectVGrid");
    var SelectHGrid = document.getElementById("SelectHGrid");

    function SelectGridline(value, checked) {
        if (checked == true) {
            IsToggleGrid.classList.remove("no-switch");
            checkBoxGrid.checked = true;
            if (value == 'SelectVGrid') {
                selectedVertical = true;
            }
            if (value == 'SelectHGrid') {
                selectedHorzintal = true;
            }
            SetValues();
        }
        else {
            if (value == 'SelectVGrid') {
                selectedVertical = false;
                if (selectedHorzintal == false) {
                    IsToggleGrid.classList.remove("no-switch");
                    checkBoxGrid.checked = false;
                }
            }
            if (value == 'SelectHGrid') {
                selectedHorzintal = false;
                if (selectedVertical == false) {
                    IsToggleGrid.classList.remove("no-switch");
                    checkBoxGrid.checked = false;
                }
            }
            SetValues();
        }
        
    }
    function SetGrid() {
        if (checkBoxGrid.checked == false) {
            selectedHorzintal = false;
            selectedVertical = false;
            SelectVGrid.checked = false;
            SelectHGrid.checked = false;
            IsToggleGrid.classList.add("no-switch");
            SetValues();
        }
    }

    function SetValues(legend) {
        var checkBoxLegend = document.getElementById("legends");
        if (legend == true) {
            checkBoxLegend.checked = true;
        }
        var checkDataLbl = document.getElementById("datalbl");
        var legend = 0;
        var lbl = 0;
        //var data = null;
        if (selectedVertical == true) {
            var Vgrid = 1
        }
        else {
            var Vgrid = 0;
        }
        if (selectedHorzintal == true) {
            var Hgrid = 1
        }
        else {
            var Hgrid = 0;
        }
        if (checkBoxGrid.checked == false) {
            Vgrid = 0;
            Hgrid = 0;
        }
        
        if (checkBoxLegend.checked == true) {
            legend=1
        }
        if (checkDataLbl.checked == true) {
            lbl = 1
        }
        Highcharts.setOptions({
            lang: {
                thousandsSep: ','
            }
        });
        Highcharts.chart('containerData', {
            chart: {
                type: 'column',
                events: {
                    load: function () {
                        var label = this.renderer.label("DataSource: USDA")
                            .css({
                                width: '400px',
                                fontSize: '10px',

                            })
                            .attr({
                                'stroke': 'silver',
                                'stroke-width': 0,
                                'r': 2,
                                'padding': 10
                            })
                            .add();

                        label.align(Highcharts.extend(label.getBBox(), {
                            align: 'right',
                            x: 0, // offset
                            verticalAlign: 'bottom',
                            y: 0 // offset
                        }), null, 'spacingBox');

                    }
                },
                marginBottom: 120
                //height: 480
                //height: (9 / 16 * 100) + '%'
            },
            title: {
                text: 'U.S. Imports of Mexican Sugar (Fiscal)',
                style: {
                    color: '#8B3910',
                    fontSize: '36px',
                    fontFamily: 'Cordia New'
                }
            },
            credits: {
                enabled: false
            },
            xAxis: {
                categories: year,
                gridLineWidth: Vgrid
            },
            yAxis: {
                allowDecimals: false,
                gridLineWidth: Hgrid,
                minorGridLineWidth: Hgrid,
                min: 0,
                tickInterval: 1000000,
                title: {
                    text: 'Million Metric tons, raw',
                    style: {
                        color: '#8B3910',
                        fontSize: '24px',
                        fontFamily: 'Cordia New'
                    }
                },
                stackLabels: {
                    enabled: lbl,
                    
                    style: {
                        color: '#B5B5B5',
                        fontSize: '10px',
                        textOutline: '0px contrast',
                        fontWeight: 'normal'
                        //textShadow: false
                    }
                    //style: {
                    //    fontWeight: 'bold',
                    //    color: (Highcharts.theme && Highcharts.theme.textColor) || 'gray'
                    //},
                }
            },
            tooltip: {
                pointFormat: '{series.name}: <b>{point.y}</b><br/>' + 'Total: <b>{point.stackTotal:,.0f}</b><br/>'
        //        formatter: function () {
        //            if (this.series.name == "Estandar Imported from Mexico") {
        //                return "<b>" + this.series.name + "</b><br>" + this.y + ": " + this.percentage + " %";
        //} 

    //}
            },
            legend: {
                symbolWidth: 20,
                enabled: legend,
                itemStyle: {
                    color: '#000000',
                    fontWeight: 'normal',
                    fontSize: '13px'
                }
            },
            plotOptions: {
                column: {
                    stacking: 'normal',
                    dataLabels: {
                        enabled: false,
                        color: (Highcharts.theme && Highcharts.theme.dataLabelsColor) || 'white'
                    }
                }
                //series: {
                //    pointPadding: 0,
                //    groupPadding: 0.1
                //}
            },
            series: [{
                id: 'esandor',
                name: 'Estandar Imported from Mexico',
                data: estandar,
                stack: 'one',
                //stacking: 'percent',        
                color: '#DEB40B'
            }, {
                    id: 'refinado',
                    name: 'Refinado Imported from Mexico',
                    data: refined,
                    stack: 'one',
                    //stacking: 'percent',        
                    color: '#F59184'
            }, {
                    id: 'total',
                    name: 'Total U.S Sugar Imports',
                    data: total,
                    stack: 'total',
                    color: '#98A05F'
            }]
        },
            function (chart) { // on complete
                function noop() { };
                chart.renderer.button('<', chart.plotLeft - 20, chart.plotHeight + chart.plotTop, noop).addClass('left').add();


                chart.renderer.button('>', chart.plotLeft + chart.plotWidth - 10, chart.plotHeight + chart.plotTop, noop).addClass('right').add();

                $('.left').click(function () {
                    chart.xAxis[0].setExtremes(0, 5);
                });
                $('.right').click(function () {
                    chart.xAxis[0].setExtremes(6,10);
                })
            }
        );
    }
    SetValues(true);
</script>
@*<script>
        function setemb() {
            alert(@Html.Raw(ViewBag.embeddedText).ToHtmlString());
        }
        setemb();
    </script>*@